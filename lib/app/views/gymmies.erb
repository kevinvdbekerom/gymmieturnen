<h3>Alle gymmies die je kan behalen</h3>

<div class = "filters">
<!--Choose among difficulty groups-->
<div class="button-group" data-filter-group = "part">
  <button class="button is-checked" data-filter="*">show all</button>
  <button class="button" data-filter=".part_1">Deel 1</button>
  <button class="button" data-filter=".part_2">Deel 2</button>
  <button class="button" data-filter=".part_3">Deel 3</button>
</div>

<div class="button-group" data-filter-group = "profile">
  <button class="button is-checked" data-filter="*">show all</button>
  <button class="button" data-filter=".arabier">Arabier</button>
  <button class="button" data-filter=".flik_flak">Flik Flak</button>
  <button class="button" data-filter=".overslag">Overslag</button>
  <button class="button" data-filter=".salto_vo">Salto vo</button>
  <button class="button" data-filter=".salto_ao">Salto ao</button>
  <button class="button" data-filter=".losom">Losom</button>
  <button class="button" data-filter=".reus">Reus</button>
  <button class="button" data-filter=".kip">Kip</button>
  <button class="button" data-filter=".vrije_sprongen">Vrije Sprongen</button>
  <button class="button" data-filter=".balanceren">Balanceren</button>
  <button class="button" data-filter=".flanken">Flanken</button>
</div>

</div>

  <%= @content%>

<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="/js/isotope.pkgd.min.js"></script>
<script>


    // init Isotope
    var $grid = $('.grid').isotope({
        itemSelector: '.gymmie',
        layoutMode: 'fitRows',
        getSortData: {
            profile: '.profile',
            level: '.level'
        }
    });

    filters = {};

    // bind filter button click
    $('.filters').on( 'click', 'button', function() {
        var $this = $(this);
        // get group key
        var $buttonGroup = $this.parents('.button-group');
        var filterGroup = $buttonGroup.attr('data-filter-group');
        // set filter for group
        filters[ filterGroup ] = $this.attr('data-filter');
        // combine filters
        var filterValue = concatValues( filters );
        console.log(filterValue)

        $grid.isotope({ filter: filterValue });
    });

    // bind sort button click
    $('#sorts').on( 'click', 'button', function() {
        var sortByValue = $(this).attr('data-sort-by');
        $grid.isotope({ sortBy: sortByValue });
    });

    // change is-checked class on buttons
    $('.button-group').each( function( i, buttonGroup ) {
        var $buttonGroup = $( buttonGroup );
        $buttonGroup.on( 'click', 'button', function() {
            $buttonGroup.find('.is-checked').removeClass('is-checked');
            $( this ).addClass('is-checked');
        });
    });

    // flatten object by concatting values
    function concatValues( obj ) {
        var value = '';
        for ( var prop in obj ) {
            value += obj[ prop ];
        }
        return value;
    }

    // change size of item by toggling gigante class
    $grid.on( 'click', '.gymmie', function() {
        $(this).toggleClass('extended');
        // trigger layout after item size changes
        $grid.isotope('layout');
    });

</script>